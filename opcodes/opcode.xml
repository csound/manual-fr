<!--translated=yes
authors=Francois Pinot
english cvs version=1.17
// translated field can be yes, no or partially
// Add your name to the existing list of authors
// Add the version number of the file you are translating from the english version number on cvs
// *** Please remember to keep this information up to date! ***
-->

<refentry id="opcode">
<indexterm id="IndexOpcode"><primary>opcode</primary></indexterm>
  <refentryinfo><title>Orchestra Syntax:Block Statements</title></refentryinfo>
  <refmeta>
    <refentrytitle>opcode</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>opcode</refname>
    <refpurpose>
      Commence un bloc d'opcode défini par l'utilisateur.
    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Définir des opcodes</title>
    <para>
      Les instructions <emphasis>opcode</emphasis> et <emphasis>endop</emphasis> permettent de définir un
      nouvel opcode qui peut être utilisé de la même façon qu'un opcode original de Csound. Ces blocs
      d'opcode ressemblent beaucoup aux instruments (et sont, en fait, implémentés comme des instruments
      spéciaux), mais on ne peut pas les appeler comme des intruments normaux, par exemple avec des
      <link linkend="i"><citetitle>instructions i</citetitle></link>.
    </para>

    <para>
      Un bloc d'opcode défini par l'utilisateur doit précéder l'instrument (ou l'opcode) depuis
      lequel on l'utilise. Mais un opcode peut aussi s'appeler lui-même. Cela permet une récursivité dont
      la profondeur n'est limitée que par la mémoire disponible. De plus, on peut, à titre expérimental,
      exécuter l'opcode défini à un taux de contrôle plus élevé que la valeur de
      <link linkend="kr"><citetitle>kr</citetitle></link> spécifiée dans l'en-tête de l'orchestre.
    </para>

    <para>
      Comme pour les intruments, les variables et les étiquettes d'un bloc d'opcode défini par l'utilisateur
      sont locales et ne sont pas visible depuis l'instrument appelant (de même que l'opcode n'a pas accès
      aux variables de l'instrument qui l'a appelé).
    </para>

    <para>
      Cependant, certains paramètres sont copiés automatiquement à l'initialisation :

      <itemizedlist>
        <listitem><para>tous les p-champs jusqu'à celui de numéro le plus élevé
        inclus, référencés dans l'instrument appelant</para></listitem>
        <listitem><para>le temps supplémentaire (voir aussi <link linkend="xtratim"><citetitle>xtratim</citetitle></link>,
        <link linkend="linsegr"><citetitle>linsegr</citetitle></link>, et les opcodes correspondants). Ceci
        peut affecter le fonctionnement de
        <emphasis>linsegr</emphasis>/<emphasis>expsegr</emphasis>/<emphasis>linenr</emphasis>/<emphasis>envlpxr</emphasis>
        dans le bloc d'opcode défini par l'utilisateur.</para></listitem>
        <listitem><para>les paramètres MIDI, s'il y en a.</para></listitem>
      </itemizedlist>
    </para>

    <para>
      Le drapeau de release (voir l'opcode <link linkend="release"><citetitle>release</citetitle></link>)
      est également copié durant l'exécution.
    </para>

    <para>
      La modification de la durée de la note dans la définition de l'opcode en assignant une valeur à
      <emphasis>p3</emphasis>, ou l'utilisation de <link linkend="ihold"><citetitle>ihold</citetitle></link>,
      <link linkend="turnoff"><citetitle>turnoff</citetitle></link>,
      <link linkend="xtratim"><citetitle>xtratim</citetitle></link>,
      <link linkend="linsegr"><citetitle>linsegr</citetitle></link>, ou d'autres opcodes similaires
      affecteront aussi l'instrument appelant. Les changements sur des contrôleurs MIDI (par exemple avec
      <link linkend="ctrlinit"><citetitle>ctrlinit</citetitle></link>) s'appliqueront aussi à l'instrument
      qui a appelé l'opcode.
    </para>

    <para>
      Utilisez l'opcode <link linkend="setksmps"><citetitle>setksmps</citetitle></link> pour fixer la valeur
      locale de <link linkend="ksmps"><citetitle>ksmps</citetitle></link>.
    </para>

    <para>
      Les opcodes <link linkend="xin"><citetitle>xin</citetitle></link> et
      <link linkend="xout"><citetitle>xout</citetitle></link> copient les variables vers et depuis la
      définition de l'opcode, permettant la communication avec l'instrument appelant.
    </para>

    <para>
      Les types des variables d'entrée et de sortie sont définis par les paramètres
      <emphasis>intypes</emphasis> et <emphasis>outtypes</emphasis>.
      <tip><para>
        On peut créer des UDOs sans entrée ou sans sortie en remplaçant la chaîne de
        caractères correspondante par 0.
      </para></tip>
    </para>

    <note>
      <title>Notes</title>
      <para>
        <itemizedlist>
          <listitem><para><emphasis>xin</emphasis> et <emphasis>xout</emphasis> ne doivent être appelés
          qu'une seule fois, et <emphasis>xin</emphasis> doit précéder <emphasis>xout</emphasis>, sinon
          une erreur d'initialisation et une désactivation de l'instrument courant peuvent se
          produire.</para></listitem>
          <listitem><para>Ces deux opcodes n'agissent qu'à l'initialisation. La copie durant l'exécution
          est réalisée par l'appel de l'opcode de l'utilisateur. Cela signifie que sauter
          <emphasis>xin</emphasis> ou <emphasis>xout</emphasis> avec
          <link linkend="kgoto"><citetitle>kgoto</citetitle></link> n'a aucun effet, alors que les sauter
          avec <link linkend="igoto"><citetitle>igoto</citetitle></link> affecte à la fois les opérations de
          l'initialisation et de l'exécution.</para></listitem>
        </itemizedlist>
      </para>
    </note>
  </refsect1>

  <refsect1>
    <title>Syntaxe</title>
    <synopsis><command>opcode</command> nom, outtypes, intypes</synopsis>
  </refsect1>

  <refsect1>
    <title>Initialisation</title>
    <para>
      <emphasis>nom</emphasis> -- nom de l'opcode. Il est constitué de n'importe quelle combinaison de
      lettres, chiffres et traits de soulignement mais il ne doit pas commencer par un chiffre. Si un
      opcode du même nom existe déjà, il est redéfini (un avertissement est affiché dans ce cas). Certains
      mots réservés (comme <emphasis>instr</emphasis> et <emphasis>endin</emphasis>) ne peuvent pas être
      redéfinis.
    </para>

    <para>
      <emphasis>intypes</emphasis> -- liste des types en entrée, toute combinaison
      des caractères a, f, k, O, P, V, K, i, o, p et j. Un caractère 0 unique peut
      être utilisé s'il n'y a pas d'argument en entrée. Il n'y a
      <emphasis>pas</emphasis> besoin d'apostrophes doubles et de délimiteurs
      (comme la virgule).
    </para>

    <para>
      La signification des différent <emphasis>intypes</emphasis> est montrée dans le tableau suivant :

      <informaltable frame="all">
        <tgroup cols="4" colsep="1" rowsep="1">
          <thead>
            <row>
              <entry>Type</entry>
              <entry>Description</entry>
              <entry>Types de Variable Autorisés</entry>
              <entry>Mise à jour</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>a</entry>
              <entry>variable de taux-a</entry>
              <entry>taux-a</entry>
              <entry>taux-a</entry>
            </row>

            <row>
              <entry>f</entry>
              <entry>variable sig-f</entry>
              <entry>sig-f</entry>
              <entry>taux-k</entry>
            </row>

            <row>
              <entry>i</entry>
              <entry>variable de taux-i</entry>
              <entry>taux-i</entry>
              <entry>initialisation</entry>
            </row>

            <row>
              <entry>j</entry>
              <entry>facultatif de taux-i, -1 par défaut</entry>
              <entry>taux-i, constante</entry>
              <entry>initialisation</entry>
            </row>

            <row>
              <entry>k</entry>
              <entry>variable de taux-k</entry>
              <entry>taux-k et -i, constante</entry>
              <entry>taux-k</entry>
            </row>

           <row>
              <entry>O</entry>
              <entry>variable facultative de taux-k, valant 0 par défaut</entry>
              <entry>taux-k et -i, constante</entry>
              <entry>taux-k</entry>
            </row>

             <row>
              <entry>P</entry>
              <entry>variable facultative de taux-k, valant 1 par défaut</entry>
              <entry>taux-k et -i, constante</entry>
              <entry>taux-k</entry>
            </row>

            <row>
              <entry>V</entry>
              <entry>variable facultative de taux-k, valant 0.5 par défaut</entry>
              <entry>taux-k et -i, constante</entry>
              <entry>taux-k</entry>
            </row>

            <row>
              <entry>J</entry>
              <entry>variable facultative de taux-k, valant -1 par défaut</entry>
              <entry>taux-k et -i, constante</entry>
              <entry>taux-k</entry>
            </row>

            <row>
              <entry>K</entry>
              <entry>taux-k avec initialisation</entry>
              <entry>taux-k et -i, constante</entry>
              <entry>taux-i et taux-k</entry>
            </row>

            <row>
              <entry>o</entry>
              <entry>facultatif à l'initialisation, 0 par défaut</entry>
              <entry>taux-i, constante</entry>
              <entry>initialisation</entry>
            </row>

            <row>
              <entry>p</entry>
              <entry>facultatif à l'initialisation, 1 par défaut</entry>
              <entry>taux-i, constante</entry>
              <entry>initialisation</entry>
            </row>
            
            <row>
              <entry>S</entry>
              <entry>variable chaîne de caractères</entry>
              <entry>chaîne de caractères de taux-k et -i, constante</entry>
              <entry>taux-i et taux-k</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </para>

    <para>
      Le nombre maximum d'arguments en entrée autorisé est 256.
    </para>

    <para>
      <emphasis>outtypes</emphasis> -- liste des types en sortie. Le format est le même que celui utilisé
      pour <emphasis>intypes</emphasis>.
    </para>

    <para>
      Voici les <emphasis>outtypes</emphasis> disponibles :

      <informaltable frame="all">
        <tgroup cols="4" colsep="1" rowsep="1">
          <thead>
            <row>
              <entry>Type</entry>
              <entry>Description</entry>
              <entry>Types de Variable Autorisés</entry>
              <entry>Mise à jour</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>a</entry>
              <entry>variable de taux-a</entry>
              <entry>taux-a</entry>
              <entry>taux-a</entry>
            </row>

            <row>
              <entry>f</entry>
              <entry>variable sig-f</entry>
              <entry>sig-f</entry>
              <entry>taux-k</entry>
            </row>

            <row>
              <entry>i</entry>
              <entry>variable de taux-i</entry>
              <entry>taux-i</entry>
              <entry>initialisation</entry>
            </row>

            <row>
              <entry>k</entry>
              <entry>variable de taux-k</entry>
              <entry>taux-k</entry>
              <entry>taux-k</entry>
            </row>

            <row>
              <entry>K</entry>
              <entry>taux-k avec initialisation</entry>
              <entry>taux-k</entry>
              <entry>taux-i et taux-k</entry>
            </row>

            <row>
              <entry>S</entry>
              <entry>variable chaîne de caractères</entry>
              <entry>chaîne de caractères de taux-k et -i, constante</entry>
              <entry>taux-i et taux-k</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </para>

    <para>
      Le nombre maximum d'arguments en sortie autorisé est 256.
    </para>

    <para>
      <emphasis>iksmps</emphasis> (facultatif, 0 par défaut) -- fixe la valeur locale de
      <emphasis>ksmps</emphasis>. Doit être un nombre entier positif, et le <emphasis>ksmps</emphasis> de
      l'instrument appelant doit être un multiple entier de cette valeur. Par exemple, si
      <emphasis>ksmps</emphasis> vaut 10 dans l'instrument depuis lequel l'opcode a été appelé, les
      valeurs permises pour <emphasis>iksmps</emphasis> sont 1, 2, 5, et 10.
    </para>

    <para>
      Si <emphasis>iksmps</emphasis> vaut zéro, le <emphasis>ksmps</emphasis> de l'instrument ou de
      l'opcode appelant est utilisé (c'est le comportement par défaut).
    </para>

    <note>
      <title>Note</title>
      <para>
        Le <emphasis>ksmps</emphasis> local est implémenté en divisant une période de contrôle en
        sous-périodes-k plus petites et en modifiant temporairement les variables globales internes de
        Csound. Ceci nécessite aussi la conversion du taux des arguments d'entrée et de sortie de
        taux-k (les variables d'entrée reçoivent la même valeur dans tous les sous-périodes-k, tandis
        que les valeurs de sortie ne sont écrites que pendant la dernière).
      </para>
    </note>

    <warning>
      <title>Avertissement au sujet du <emphasis>ksmps</emphasis> local</title>
      <para>
        Lorsque le <emphasis>ksmps</emphasis> local est différent du <emphasis>ksmps</emphasis> de
        l'orchestre (celui spécifié dans l'en-tête de l'orchestre), il ne faut pas utiliser d'opération
        globale de taux-a dans le bloc d'opcode défini par l'utilisateur.
      </para>

      <para>
        Ceci comprend :

        <itemizedlist>
          <listitem><para>tous les accès aux variables <quote>ga</quote></para></listitem>
          <listitem><para>les opcodes zak de taux-a (<link linkend="zar"><citetitle>zar</citetitle></link>,
            <link linkend="zaw"><citetitle>zaw</citetitle></link>, etc.)</para></listitem>
          <listitem><para><link linkend="tablera"><citetitle>tablera</citetitle></link> et
            <link linkend="tablewa"><citetitle>tablewa</citetitle></link> (ces deux opcodes peuvent 
            fonctionner en fait, mais il faut prendre des précautions)</para></listitem>
          <listitem><para>La famille d'ocpode <emphasis>in</emphasis> et <emphasis>out</emphasis> (ils
            lisent depuis et écrivent dans des tampons globaux de taux-a)</para></listitem>
        </itemizedlist>
      </para>

      <para>
        En général, il faut utiliser le <emphasis>ksmps</emphasis> local avec précaution car c'est une
        fonctionnalité expérimentale, bien qu'elle fonctionne correctement dans la plupart des cas.
      </para>
    </warning>

    <para>
      L'instruction <link linkend="setksmps"><citetitle>setksmps</citetitle></link> peut être utilisée
      pour fixer la valeur du <emphasis>ksmps</emphasis> local du bloc d'opcode défini par l'utilisateur.
      Elle a un paramètre de taux-i spécifiant la nouvelle valeur de <emphasis>ksmps</emphasis> (qui reste
      inchangée si l'on utilise zéro, voir aussi les notes au sujet de <emphasis>iksmps</emphasis> ci-dessus).
      <emphasis>setksmps</emphasis> doit être utilisé avant tout autre opcode (mais il est autorisé après
      <emphasis>xin</emphasis>), autrement des résultats imprévisibles peuvent se produire.
    </para>

    <para>
      On peut lire les paramètres d'entrée avec l'opcode <emphasis>xin</emphasis>, et la sortie est
      écrite par l'opcode <emphasis>xout</emphasis>. On ne doit utiliser qu'une seule instance de ces
      unités, car <emphasis>xout</emphasis> écrase la sortie sans accumuler les valeurs. Le nombre et le
      type des arguments pour <emphasis>xin</emphasis> et <emphasis>xout</emphasis> doit être le même que
      dans la déclaration du bloc d'opcode défini par l'utilisateur (voir les tableaux ci-dessus).
    </para>

    <para>
      Les arguments d'entrée et de sortie doivent se conformer à la définition à la fois en nombre (sauf
      si des entrées de taux-i facultatives sont utilisées) et en genre. Un paramètre d'entrée facultatif
      de taux-i (<emphasis>iksmps</emphasis>) est automatiquement ajouté à la liste des
      <emphasis>intypes</emphasis> et (comme pour setksmps) fixe la valeur du <emphasis>ksmps</emphasis>
      local.
    </para>
  </refsect1>

  <refsect1>
    <title>Exécution</title>
    <para>
      La syntaxe d'un bloc d'opcode défini par l'utilisateur est la suivante :

      <programlisting>
<emphasis role="oblock">opcode</emphasis>  <command>nom</command>, outtypes, intypes
xinarg1 [, xinarg2] [, xinarg3] ... [xinargN]  <emphasis role="opc">xin</emphasis>
[<emphasis role="opc">setksmps</emphasis>  iksmps]
... the rest of the instrument's code.
<emphasis role="opc">xout</emphasis>  xoutarg1 [, xoutarg2] [, xoutarg3] ... [xoutargN]
<emphasis role="oblock">endop</emphasis></programlisting>
    </para>

    <para>
      Le nouvel opcode peut ensuite être utilisé avec la syntaxe usuelle :

      <programlisting>
[xoutarg1] [, xoutarg2] ... [xoutargN] <command>nom</command>  [xinarg1] [, xinarg2] ... [xinargN] [, iksmps]</programlisting>
    </para>

    <note>
      <title>Note</title>
      <para>
        L'opcode est toujours appelé à la fois durant l'initialisation et durant l'exécution, même s'il
        n'y a pas d'arguments de taux-k ou -a. Si l'on sait que plusieurs opcodes définis par l'utilisateur
        n'ont pas d'effet durant l'exécution (taux-k) dans un instrument, on peut épargner du temps CPU en
        sautant ces groupes d'opcodes avec <link linkend="kgoto"><citetitle>kgoto</citetitle></link>.
      </para>
    </note>
  </refsect1>

  <refsect1>
    <title>Exemples</title>
    <para>
      Voici un exemple d'opcode défini par l'utilisateur. Il utilise le fichier
      <ulink url="examples/opcode_example.csd"><citetitle>opcode.csd</citetitle></ulink>.

      <example>
        <title>Exemple d'opcode défini par l'utilisateur.</title>

        <para>Voir les sections <link linkend="UsingRealTime"><citetitle>Audio en Temps Réel</citetitle></link>
        et <link linkend="CommandFlags"><citetitle>Options de la Ligne de Commande</citetitle></link> pour plus
        d'information sur l'utilisation des options de la ligne de commande.</para>
          <xi:include href="examples-xml/opcode_example.csd.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
      </example>
    </para>
  </refsect1>

  <refsect1>
    <title>Voir aussi</title>
    <para>
      <link linkend="endop"><citetitle>endop</citetitle></link>,
      <link linkend="setksmps"><citetitle>setksmps</citetitle></link>,
      <link linkend="xin"><citetitle>xin</citetitle></link>,
      <link linkend="xout"><citetitle>xout</citetitle></link>
    </para>
  </refsect1>

  <refsect1>
    <title>Crédits</title>
    <para>Auteur : Istvan Varga, 2002 ; basé sur du code de Matt J. Ingalls</para>
    <para>Nouveau dans la version 4.22</para>
  </refsect1>
</refentry>
