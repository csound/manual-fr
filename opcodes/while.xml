<!--translated=yes
authors=Francois Pinot
// translated field can be yes, no or partially
// Add your name to the existing list of authors
// *** Please remember to keep this information up to date! ***
-->

<refentry id="while">
<indexterm id="IndexWhile"><primary>while</primary></indexterm>
  <refentryinfo><title>Instrument Control:Program Flow Control</title></refentryinfo>
  <refmeta>
    <refentrytitle>while</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>while</refname>
    <refpurpose>
      Une construction syntactique de boucle.
    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Description</title>
    <para>
      Une construction syntactique de boucle.
   </para>
  </refsect1>

  <refsect1>
    <title>Syntaxe</title>
    <synopsis><command>while</command>  condition <command>do</command>
    ... <command>od</command></synopsis>
  </refsect1>

  <refsect1>
    <title>Exécution</title>
    <para>
      Les instructions entre <emphasis>do</emphasis> et
      <emphasis>od</emphasis> forment le corps d'une boucle qui est exécutée
      tant que la condition reste wraie.
    </para>
   </refsect1>
 
  <refsect1>
    <title>Exemples</title>
    <para>
      Voici un exemple de la construction while. Il utilise le fichier
      <ulink url="examples/while.csd"><citetitle>while.csd</citetitle></ulink>.
      <example>
        <title>Exemple de la construction while.</title>
        <para>Voir les sections <link linkend="UsingRealTime"><citetitle>Audio en Temps Réel</citetitle></link>
        et <link linkend="CommandFlags"><citetitle>Options de la Ligne de Commande</citetitle></link> pour plus
        d'information sur l'utilisation des options de la ligne de commande.</para>
          <xi:include href="examples-xml/while.csd.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
      </example>
            Sa sortie contiendra des lignes comme celles-ci :
      <screen>
B  0.000 ..  1.000 T  1.000 TT  1.000 M:      0.0
new alloc for instr 1:
instr 1:  p4 = 3.000
instr 1:  p4 = 2.000
instr 1:  p4 = 1.000
instr 1:  p4 = 0.000
instr 1:  p4 = -1.000
B  1.000 ..  2.000 T  2.000 TT  2.000 M:      0.0
new alloc for instr 2:
instr 2:  p4 = 3.000
instr 2:  p4 = 2.000
instr 2:  p4 = 1.000
instr 2:  p4 = 0.000
instr 2:  p4 = -1.000
B  2.000 ..  3.000 T  3.000 TT  3.000 M:      0.0
      </screen>
    </para>
  </refsect1>
      
  <refsect1>
    <title>Voir aussi</title>
    <para>
      <link linkend="ControlPgmctl"><citetitle>Contrôle séquentiel d'un programme : structures de boucle</citetitle></link>
    </para>
  </refsect1>

  <refsect1>
    <title>Crédits</title>
    <para>&namejohn;.</para>
    <para>Nouveau dans la version 6.04 de Csound</para>
  </refsect1>
</refentry>
