<!--translated=yes
authors=Francois Pinot
english cvs version=1.7
// translated field can be yes, no or partially
// Add your name to the existing list of authors
// Add the version number of the file you are translating from the english version number on cvs
// *** Please remember to keep this information up to date! ***
-->

<refentry id="pyinit">
<indexterm id="IndexPyInit"><primary>pyinit</primary></indexterm>
  <refentryinfo><title>Python Opcodes</title></refentryinfo>
  <refmeta>
    <refentrytitle>pyinit Opcodes</refentrytitle>
  </refmeta>
  
  <refnamediv>
    <refname>pyinit</refname>
    <refpurpose>Initialise l'interpréteur Python.
    </refpurpose>
  </refnamediv>
  
  <refsect1>
    <title>Syntaxe</title>
    <synopsis><command>pyinit</command></synopsis>
  </refsect1>
  
  <refsect1>
    <title>Description</title>
    <para>
      Dans Csound, il faut d'abord invoquer
      l'opcode <emphasis>pyinit</emphasis> dans l'en-tête de l'orchestre pour
      initialiser l'interpréteur Python, avant d'utiliser n'importe quel autre
      des opcodes Python.
    </para>
    <para>
      Mais si l'on utilise les opcodes Python dans la version CsoundAC de Csound
      ou depuis un frontal en python utilisant le module csnd6,
      il n'est pas nécessaire d'invoquer <emphasis>pyinit</emphasis>, car
      l'interpréteur est déjà initialisé. Dans ce cas, CsoundAC (ou le module
      python csnd6) crée automatiquement une interface Python à l'API de Csound.
      Dans CsoundAC cela existe sous la forme d'une
      instance globale de la classe <literal>CsoundAC.CppSound</literal>, nommée
      <literal>csound</literal>. Dans un frontal en python qui importe le module
      csnd6, le nom de la variable contenant l'instance de Csound dépend du code
      du frontal. Ainsi, le code Python écrit dans l'orchestre de
      Csound a accès à l'objet global <literal>csound</literal>.
    </para>
    <para>
      L'instance courante de Csound dans laquelle <emphasis>pyinit</emphasis>
      a été appelé est mémorisée dans une variable globale de python appelée
      _CSOUND_. Celle-ci contient l'adresse mémoire de l'instance et l'on peut
      l'utiliser avec le module csnd6 via l'appel csoundGetInstance(instance).
      Cette fonction python retourne un objet que l'on peut utiliser avec toutes
      les fonctions de l'API de Csound. 
    </para>
  </refsect1>
  
  <refsect1>
    <title>Crédits</title>
    <para>
      Copyright (c) 2002 Maurizio Umberto Puxeddu. Tous droits réservés.
      Certaines parties, copyright (c) 2004 et 2005 Michael Gogins et (c)
      2013, V. Lazzarini.
    </para>
  </refsect1>
</refentry>
