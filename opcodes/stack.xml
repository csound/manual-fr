<!--translated=yes
authors=Francois Pinot
english cvs version=1.3
// translated field can be yes, no or partially
// Add your name to the existing list of authors
// Add the version number of the file you are translating from the english version number on cvs
// *** Please remember to keep this information up to date! ***
-->

<refentry id="stack">
<indexterm id="IndexStack"><primary>stack</primary></indexterm>
  <refentryinfo><title>Instrument Control:Stacks</title></refentryinfo>
  <refentryinfo><title>Deprecated</title></refentryinfo>
  <refmeta>
    <refentrytitle>stack</refentrytitle>
  </refmeta>
  
  <refnamediv>
    <refname>stack</refname>
    <refpurpose>
      Initialise la pile. Obsolète.
    </refpurpose>
  </refnamediv>
  
  <refsect1>
    <title>Description</title>
    <para>Opcode de greffon dans stackops.</para>
    <para>
      Initialise et fixe la taille de la pile globale.
    </para>
  </refsect1>
  <refsect1>
    <title>Syntaxe</title>
    <synopsis><command>stack</command>  iStackSize</synopsis>
  </refsect1>
  
  <refsect1>
    <title>Initialisation</title>
    <para>
      <emphasis>iStackSize</emphasis> -- taille de la pile en octets.
    </para>
  </refsect1>
  <refsect1>
    <title>Exécution</title>
    <para>
      Csound implémente une pile globale unique. L'initialisation de la pile par
      l'opcode <emphasis>stack</emphasis> n'est pas requise - elle est facultative,
      et si elle n'a pas eu lieu, la première utilisation de
      <link linkend="push"><citetitle>push</citetitle></link> ou de
      <link linkend="push_f"><citetitle>push_f</citetitle></link> créera
      automatiquement une pile de 32768 octets. Sinon, <emphasis>stack</emphasis>
      est normalement appelé depuis l'en-tête de l'orchestre et prend un paramètre
      de taille en octets (il y a une limite supérieure d'environ 16 MO). Une fois
      fixée, la taille de la pile reste constante et ne peut pas être modifiée
      durant l'exécution.
    </para>
    <para>
      La pile globale fonctionne en mode dernier entré, premier sorti : après
      plusieurs appels <link linkend="push_f"><citetitle>push_f</citetitle></link>,
      il faut utiliser <emphasis>pop_f</emphasis> dans l'ordre inverse.
    </para>
    <para>
      Chaque opération <link linkend="push"><citetitle>push</citetitle></link> ou
      <link linkend="pop"><citetitle>pop</citetitle></link> peut traiter un
      "paquet" de variables. Lorsque l'on utilise
      <link linkend="pop"><citetitle>pop</citetitle></link>, le nombre, le type
      et l'ordre des éléments doivent être les mêmes que ceux utilisés par le
      <link linkend="push"><citetitle>push</citetitle></link> correspondant. Ainsi
      après un "push Sfoo, ibar", il faut un appel comme "Sbar, ifoo pop", et pas,
      par exemple deux instructions "pop" séparées.
    </para>
    <para>
      Les opcodes <link linkend="push"><citetitle>push</citetitle></link> et
      <link linkend="pop"><citetitle>pop</citetitle></link> acceptent des variables
      de n'importe quel type (taux-i, -k, -a et chaînes de caractères). Les
      variables de type 'a' et 'k' ne sont passées que pendant l'exécution, tandis
      que celles de type 'i' et 'S' ne sont passées que pendant l'initialisation.
    </para>
    <para>
      <emphasis>push</emphasis>/<emphasis>pop</emphasis> pour les types a, k, i
      et S copient les données par valeur. Au contraire,
      <link linkend="push_f"><citetitle>push_f</citetitle></link> ne pousse qu'une
      référence du f-signal et le <link linkend="pop_f"><citetitle>pop_f</citetitle></link>
      correspondant copiera directement depuis la variable originale dans le
      signal de sortie. Pour cette raison, il n'est pas recommandé de changer le
      f-signal source de <link linkend="push_f"><citetitle>push_f</citetitle></link>
      avant l'appel à <link linkend="pop_f"><citetitle>pop_f</citetitle></link>.
      De même, si l'instance d'instrument possédant la variable passée à
      <emphasis>push_f</emphasis> est désactivée avant que <emphasis>pop_f</emphasis>
      ne soit appelé, il peut en résulter un comportement indéfini.
    </para>
    <para>
      Toutes les erreurs de pile (tentative de pousser des données alors qu'il
      n'y a plus d'espace ou d'extraire des données d'une pile vide, nombre ou
      types d'arguments inconsistants, etc) sont fatales et terminent l'exécution.
    </para>
  </refsect1>
  
  <refsect1>
    <title>Exemples</title>
    <para>
      Voici un exemple de l'opcode stack. Il utilise le fichier
      <ulink url="examples/stack.csd"><citetitle>stack.csd</citetitle></ulink>.
      <example>
        <title>Exemple de l'opcode stack.</title>
        <para>Voir les sections <link linkend="UsingRealTime"><citetitle>Audio en Temps Réel</citetitle></link>
        et <link linkend="CommandFlags"><citetitle>Options de la Ligne de Commande</citetitle></link> pour plus
        d'information sur l'utilisation des options de la ligne de commande.</para>
        <xi:include href="examples-xml/stack.csd.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
      </example>
    </para>
  </refsect1>
  
  <refsect1>
    <title>Voir aussi</title>
    <para>
      <link linkend="pop"><citetitle>pop</citetitle></link>,
      <link linkend="push"><citetitle>push</citetitle></link>,
      <link linkend="pop_f"><citetitle>pop_f</citetitle></link> and 
      <link linkend="push_f"><citetitle>push_f</citetitle></link>.
    </para>
    <para>
      L'utilisation de cet opcode relève un peu du bricolage comme on peut le
      lire ici :
      <ulink url="http://csound.1045644.n5.nabble.com/passing-a-string-to-a-UDO-td1099284.html"></ulink>.
    </para>
  </refsect1>
  
  <refsect1>
    <title>Crédits</title>
    <para>Par &nameistvan;.</para>
    <para>2006</para>
    <para>Obsolète depuis la version 6.04.</para>
  </refsect1>
</refentry>