<!--translated=yes
authors=Francois Pinot
// translated field can be yes, no or partially
// Add your name to the existing list of authors
// *** Please remember to keep this information up to date! ***
-->

<refentry id="cmp">
  <indexterm id="IndexCmp"><primary>cmp</primary></indexterm>
  <refentryinfo><title>Signal Modifiers:Comparators and Accumulators</title></refentryinfo>
  <refmeta>
    <refentrytitle>cmp</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>cmp</refname>
    <refpurpose>
      Compare des signaux audio ou des tableaux.
    </refpurpose>
  </refnamediv>
  
  <refsect1>
    <title>Description</title>
    <para>Opcode du greffon emugens.</para>
    <para>
      Compare des signaux audio ou des tableaux, échantillon par échantillon ou
      valeur par valeur. Toutes les comparaisons sont possibles : `&lt; `&lt;=,
      &gt;, &gt;=, ==, !=.
    </para>
    <para>
      Un signal audio peut être comparé à un autre signal audio, ou à un
      scalaire (valeur de taux-i ou -k).
      <programlisting>
        aout cmp aL, ">", aR
        aOut cmp aIn, ">=", 0.5
        aOut cmp aIn, "`&lt;=", kthreshold
      </programlisting>
    </para>
    <para>
      Un tableau peut être comparé à un autre tableau, à un scalaire, ou testé
      s'il appartient à un intervalle entre deux scalaires. Toutes ces
      opérations sont valables pour les tableaux-i et -k.
      <programlisting>
        kOut[] cmp kIn[], ">=", kx
        kOut[] cmp kA[], "==", kB[]
        kOut[] cmp 0.5, "`&lt;", kIn[], "`&lt;=", 1
      </programlisting>
    </para>
  </refsect1>

  <refsect1>
    <title>Syntaxe</title>
    <synopsis>aout <command>cmp</command> a1, S_operator, a2</synopsis>
    <synopsis>aout <command>cmp</command> a1, S_operator, kb</synopsis>
    <synopsis>kOut[] <command>cmp</command> kA[], S_operator, kb</synopsis>
    <synopsis>kOut[] <command>cmp</command> kA[], S_operator, kB[]</synopsis>
    <synopsis>kOut[] <command>cmp</command> k1, S_operator1, kIn[], S_operator2, k2</synopsis>
  </refsect1>

  <refsect1>
    <title>Initialisation</title>
    <para>
      <emphasis>S_operator</emphasis> -- un opérateur mathématique parmi ">",
      ">=", "&lt;", "&lt;=", "=="
    </para>
  </refsect1>
  
  <refsect1>
    <title>Exécution</title>
    <para><emphasis>a1 / a2</emphasis> -- Signaux en entrée.</para>
    <para><emphasis>kb / ib</emphasis> -- Terme scalaire.</para>
    <para><emphasis>kA[] / kB[]</emphasis> -- Tableaux en entrée.</para>
    <para>
      Quelques exemples d'utilisation : 
      <programlisting>
        aout cmp aL, ">", aR     ; aout = aL > aR pour chaque échantillon
        aout cmp aL, ">=", aR
        aout cmp aL, "`&lt;", aR
        aout cmp aL, "`&lt;=", aR
        aout cmp aL, "==", aR
        kOut[] cmp kA, ">=", kb   ; kA est un tableau
      </programlisting>
    </para>
  </refsect1>
  
  <refsect1>
    <title>Exemples</title>
    <para>
      Voici un exemple de l'opcode cmp. Il utilise le fichier
      <ulink url="examples/cmp.csd"><citetitle>cmp.csd</citetitle></ulink>.
      <example>
        <title>Exemple de l'opcode cmp.</title>
        <xi:include href="examples-xml/cmp.csd.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
      </example>
    </para>
  </refsect1>

  <refsect1>
    <title>Voir aussi</title>
    <para>
      <link linkend="MathArtLogic"><citetitle>Opérations arithmétiques et logiques</citetitle></link>
    </para>
    <para>
      <link linkend="SigmodCompaccum"><citetitle>Comparateurs et accumulateurs</citetitle></link>
    </para>
    <para>
      <link linkend="arrayOpcodes"><citetitle>Opcodes de tableaux</citetitle></link>
    </para>
  </refsect1>

  <refsect1>
    <title>Crédits</title>
    <para>Par : &nameeduardo; 2017</para>
  </refsect1>
</refentry>
