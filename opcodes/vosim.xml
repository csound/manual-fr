<!--translated=yes
authors=Francois Pinot
english cvs version=1.4
// translated field can be yes, no or partially
// Add your name to the existing list of authors
// Add the version number of the file you are translating from the english version number on cvs
// *** Please remember to keep this information up to date! ***
-->

<refentry id="vosim">
<indexterm id="IndexVosim"><primary>vosim</primary></indexterm>
<refentryinfo><title>Signal Generators:Granular Synthesis</title></refentryinfo>
  <refmeta>
    <refentrytitle>vosim</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>vosim</refname>
    <refpurpose>
      Simulation vocale simple basée sur des pulsations glottales avec des
      caractéristiques de formant.
    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Description</title>
    <para>
      Cet opcode produit une simulation vocale simple basée sur des pulsations
      glottales avec des caractéristiques de formant. La sortie est une suite
      d'évènements sonores dans laquelle chaque élément est composé d'une explosion
      de pulsations sinusoïdales élevées au carré suivies par un silence. La méthode
      de synthèse VOSIM (VOcal SIMulation) fut développée par Kaegi et Tempelaars
      dans les années 1970.
    </para>
  </refsect1>

  <refsect1>
    <title>Syntaxe</title>
    <synopsis>ar <command>vosim</command> kamp, kFund, kForm, kDecay, kPulseCount, kPulseFactor, ifn [, iskip]</synopsis>
  </refsect1>

  <refsect1>
    <title>Intialisation</title>
    <para><emphasis>ifn</emphasis> - une table sonore contenant normalement une
    demie-période d'une onde sinusoïdale, élévée au carré (voir les notes
    ci-dessous).</para>
    <para><emphasis>iskip</emphasis> - (facultatif) L'initialisation est ignorée,
    pour les notes liées.</para>
  </refsect1>

  <refsect1>
    <title>Exécution</title>
    <para><emphasis>ar</emphasis> - signal en sortie. Noter que les sortie est
      habituellement unipolaire - seulement positive.</para>
    <para><emphasis>kamp</emphasis> - amplitude de la sortie, l'amplitude de crête
      de la première pulsation dans chaque explosion.</para>
    <para><emphasis>kFund</emphasis> - hauteur fondamentale, en Hz. Chaque
      évènement dure 1/<emphasis>kFund</emphasis> secondes.</para>
    <para><emphasis>kForm</emphasis> - fréquence du formant central. La longueur
      de chaque pulsation dans l'explosion vaut 1/<emphasis>kForm</emphasis>
      secondes.</para>
    <para><emphasis>kDecay</emphasis> - facteur d'amortissement d'une pulsation
      à l'autre. Il est soustrait de l'amplitude à chaque nouvelle pulsation.</para>
    <para><emphasis>kPulseCount</emphasis> - nombre de pulsations dans la partie
      explosive de chaque évènement.</para>
    <para><emphasis>kPulseFactor</emphasis> - la largeur de pulsation est multipliée
      par cette valeur à chaque nouvelle pulsation. Cela provoque un glissement de
      formant. Si le factor est &lt; 1.0, le formant monte, s'il est &gt; 1.0 chaque
      nouvelle pulsation est plus longue et ainsi le format descend. La hauteur
      finale du formant vaut <emphasis>kForm</emphasis> * 
      pow(<emphasis>kPulseFactor</emphasis>, <emphasis>kPulseCount</emphasis>)</para>
    <para>La sortie de <emphasis>vosim</emphasis> est une suite d'évènements sonores,
      dans laquelle chaque évènement est composé d'une explosion de pulsations
      sinusoïdales élevées au carré suivies par un silence. La durée totale des
      évènements détermine la fréquence fondamentale. La longueur de chaque
      impulsion individuelle dans l'explosion de sinus au carré produit une bande
      de fréquence formantique. La largeur du formant est déterminée par le taux de
      silence par rapport aux pulsations (voir ci-dessous). Le résultat final est
      aussi modelé par le facteur d'atténuation entre pulsations.</para>

    <para>Le fait qu'aucune fonction GEN ne crée une onde sinusoïdale élevée au carré
      telle quelle pose un petit problème dans l'utilisation de cet opcode. On peut
      créer la table appropriée depuis la partition en utilisant quelque chose
      comme ce qui suit.</para>
    <programlisting><emphasis role="comment">; use GEN09 to create half a sine in table 17
</emphasis>
<emphasis role="stamnt">f</emphasis> 17 <emphasis>time</emphasis> <emphasis>size</emphasis> 9  0.5  1 0

<emphasis role="comment">; run instr 101 on table 17 for a single init-pass
</emphasis>
<emphasis role="stamnt">i</emphasis> 101 0 0 17</programlisting>

    <para>On peut aussi le faire avec un instrument qui remplit une ftable dans
      l'orchestre :</para>
    <programlisting>	; square each point in table #p4. This should be run as init-only, just once in the performance.

<emphasis role="oblock">instr</emphasis> 101

    index <emphasis role="opc">tableng</emphasis> p4

    index <emphasis role="op">=</emphasis> index - 1  <emphasis role="comment">; start from last point</emphasis>
loop:

    ival <emphasis role="opc">table</emphasis> index, p4

    ival <emphasis role="op">=</emphasis> ival * ival

    <emphasis role="opc">tableiw</emphasis> ival, index, p4

    index <emphasis role="op">=</emphasis> index - 1

    if index &lt; 0 <emphasis role="opctrl">igoto</emphasis> <emphasis role="olabel">endloop</emphasis>
            <emphasis role="opctrl">igoto</emphasis> <emphasis role="olabel">loop</emphasis>
<emphasis role="olabel">endloop:</emphasis>
<emphasis role="oblock">endin</emphasis></programlisting>

    <note><title>Limites de Paramètre</title><para>Le nombre de pulsations multiplié
      par la largeur de pulsation doit être inclus dans la longueur de l'évènement
      (1/<emphasis>kFund</emphasis>). Si ce n'est pas le cas, l'algorithme fonctionne
      quand même, mais les pulsations qui se trouveraient en dehors de l'évènement
      ne sont pas démarrées. Cela peut introduire un silence à la fin de l'évènement
      même s'il n'est pas désiré. En conséquence, <emphasis>kForm</emphasis> doit
      être supérieur à <emphasis>kFund</emphasis>, sinon il n'y aura que du
      silence en sortie.</para></note>

    <para><emphasis>Vosim</emphasis> a été créé pour émuler des sons vocaux en
      modélisant des impulsions glottales. On peut créer des sons riches en
      combinant plusieurs instances de <emphasis>vosim</emphasis> avec différents
      paramètres. Le fait que le signal ne soit pas à bande limitée est un
      inconvénient. Mais comme les auteurs le souligne, l'atténuation des composants
      aigus est de -60 dB à six fois la fréquence fondamentale. On peut également
      modifier le signal en changeant le signal source dans la table de lecture.
      La technique a un intérêt historique et peut produire des sons riches à
      moindre frais (chaque échantillon ne nécessite qu'une lecture dans la table
      suivie d'une seule multiplication pour l'atténuation).</para>

    <para>Comme indiqué, la largeur de bande du formant dépend du rapport entre
      l'explosion de pulsation et le silence dans un évènement. Mais ce n'est pas
      un paramètre indépendant : la fondamentale fixe la longueur de l'évènement
      tandis que le centre du formant définit la longueur de la pulsation. Il est
      ainsi impossible de garantir un rapport explosion/silence spécifique, car
      la longueur de l'explosion doit être un multiple entier de la longueur de
      la pulsation. La chute des pulsations peut être utilisée pour lisser la
      transition de N à N+/-1 pulsations, mais il y aura toujours des paliers dans
      le profil spectral de la sortie. L'exemple de code ci-dessous montre une
      telle approche.</para>

    <para>Tous les paramètres en entrée sont de taux-k. Les paramètres en entrée
      ne sont utilisés que pour déterminer chaque nouvel évènement (ou grain).
      L'amplitude de l'évènement est fixée pour chaque évènement à l'initialisation.
      Pour les valeurs usuelles des paramètres, lorsque
      <link linkend="ksmps"><citetitle>ksmps</citetitle></link> &lt;500, les
      paramètres de taux-k sont mis à jour plus souvent que les évènements ne sont
      créés. Dans tous les cas, il n'y aura pas de bruit à large bande injecté dans
      le système à cause d'entrées de taux-k mises à jour moins souvent qu'elles ne
      sont lues, mais quelques artefacts peuvent être créés.</para>

    <para>L'opcode devrait se comporter raisonnablement pour toutes les entrées.
      Quelques détails :
      <orderedlist numeration="loweralpha">
        <listitem>
          <para>kFund &lt; 0 : il est forcé à une valeur positive - pas de points
            dans des évènements "inversés".</para>
        </listitem>
        <listitem>
          <para>kFund == 0 : cela conduit à un évènement de longueur "infinie",
            c'est-à-dire une explosion de pulsation suivie par un très long silence
            indéfini.</para>
        </listitem>
        <listitem>
          <para>kForm == 0 : cela conduit à une pulsation de longueur infinie, ainsi
            aucune pulsation n'est générée (c'est-à-dire silence).</para>
        </listitem>
        <listitem>
          <para>kForm &lt; 0 : la table est lue à l'envers. Si la table est symétrique,
            <emphasis>kform</emphasis> et -<emphasis>kform</emphasis>donneront des
            sortie identiques bit à bit.</para>
        </listitem>
        <listitem>
          <para>kPulseFactor == 0 : la seconde pulsation en avant est zéro. Voir (c).</para>
        </listitem>
        <listitem>
          <para>kPulseFactor &lt; 0 : les pulsations lisent la table alternativement
            à l'endroit et à l'envers.</para>
        </listitem>
      </orderedlist>
    </para>
    <para>Avec une table de pulsation asymétrique, un <emphasis>kForm</emphasis> ou
      un <emphasis>kPulseFactor</emphasis> négatifs peuvent être utiles.</para>
  </refsect1>

  <refsect1>
    <title>Exemples</title>
    <para>
      Voici un exemple de l'opcode vosim. Il utilise le fichier
      <ulink url="examples/vosim.csd"><citetitle>vosim.csd</citetitle></ulink>.

      <example>
        <title>Exemple de l'opcode vosim.</title>
        <para>Voir les sections <link linkend="UsingRealTime"><citetitle>Audio en Temps Réel</citetitle></link>
        et <link linkend="CommandFlags"><citetitle>Options de la Ligne de Commande</citetitle></link> pour plus
        d'information sur l'utilisation des options de la ligne de commande.</para>
          <xi:include href="examples-xml/vosim.csd.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
      </example>
    </para>
  </refsect1>

  <refsect1>
    <title>Voir aussi</title>
    <para>
      <link linkend="SiggenGranular"><citetitle>Synthèse granulaire</citetitle></link>
    </para>
  </refsect1>

  <refsect1>
    <title>Crédits</title>
    <para>
      <simplelist>
        <member>Auteur : &namerasmus;</member>
        <member>Mars 2008</member>
      </simplelist>
    </para>
  </refsect1>
</refentry>
