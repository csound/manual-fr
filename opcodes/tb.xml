<!--translated=yes
authors=Francois Pinot
english cvs version=1.9
// translated field can be yes, no or partially
// Add your name to the existing list of authors
// Add the version number of the file you are translating from the english version number on cvs
// *** Please remember to keep this information up to date! ***
-->

<refentry id="tb">
<indexterm id="IndexTb15_init"><primary>tb15_init</primary></indexterm>
<indexterm id="IndexTb14_init"><primary>tb14_init</primary></indexterm>
<indexterm id="IndexTb13_init"><primary>tb13_init</primary></indexterm>
<indexterm id="IndexTb12_init"><primary>tb12_init</primary></indexterm>
<indexterm id="IndexTb11_init"><primary>tb11_init</primary></indexterm>
<indexterm id="IndexTb10_init"><primary>tb10_init</primary></indexterm>
<indexterm id="IndexTb9_init"><primary>tb9_init</primary></indexterm>
<indexterm id="IndexTb8_init"><primary>tb8_init</primary></indexterm>
<indexterm id="IndexTb7_init"><primary>tb7_init</primary></indexterm>
<indexterm id="IndexTb6_init"><primary>tb6_init</primary></indexterm>
<indexterm id="IndexTb5_init"><primary>tb5_init</primary></indexterm>
<indexterm id="IndexTb4_init"><primary>tb4_init</primary></indexterm>
<indexterm id="IndexTb3_init"><primary>tb3_init</primary></indexterm>
<indexterm id="IndexTb2_init"><primary>tb2_init</primary></indexterm>
<indexterm id="IndexTb1_init"><primary>tb1_init</primary></indexterm>
<indexterm id="IndexTb0_init"><primary>tb0_init</primary></indexterm>
<indexterm id="IndexTb15"><primary>tb15</primary></indexterm>
<indexterm id="IndexTb14"><primary>tb14</primary></indexterm>
<indexterm id="IndexTb13"><primary>tb13</primary></indexterm>
<indexterm id="IndexTb12"><primary>tb12</primary></indexterm>
<indexterm id="IndexTb11"><primary>tb11</primary></indexterm>
<indexterm id="IndexTb10"><primary>tb10</primary></indexterm>
<indexterm id="IndexTb9"><primary>tb9</primary></indexterm>
<indexterm id="IndexTb8"><primary>tb8</primary></indexterm>
<indexterm id="IndexTb7"><primary>tb7</primary></indexterm>
<indexterm id="IndexTb6"><primary>tb6</primary></indexterm>
<indexterm id="IndexTb5"><primary>tb5</primary></indexterm>
<indexterm id="IndexTb4"><primary>tb4</primary></indexterm>
<indexterm id="IndexTb3"><primary>tb3</primary></indexterm>
<indexterm id="IndexTb2"><primary>tb2</primary></indexterm>
<indexterm id="IndexTb1"><primary>tb1</primary></indexterm>
<indexterm id="IndexTb0"><primary>tb0</primary></indexterm>
  <refentryinfo><title>Table Control:Table Queries</title></refentryinfo>
  <refmeta>
    <refentrytitle>tb</refentrytitle>
  </refmeta>
  
  <refnamediv>
    <refname>tb0, tb1, tb2, tb3, tb4, tb5, tb6, tb7, tb8, tb9, tb10, tb11, tb12, tb13, tb14, tb15</refname>
    <refname>tb0_init, tb1_init, tb2_init, tb3_init, tb4_init, tb5_init, tb6_init, tb7_init, tb8_init, tb9_init, tb10_init, tb11_init, tb12_init, tb13_init, tb14_init, tb15_init</refname>
    <refpurpose>
      Accès en lecture à une table depuis une expression.
    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Description</title>
    <para>
      Permet de lire des tables de manière fonctionnelle, à utiliser dans des
      expressions.
      Actuellement, Csound ne supporte que les fonctions avec un seul argument
      en entrée. Cependant, pour accéder aux éléments d'une table, on doit
      fournir deux nombres : le numéro de la table et l'indice de l'élément.
      Donc, afin de pouvoir accéder à un élément d'une table par une fonction,
      il faut une étape de préparation.
    </para>
  </refsect1>

  <refsect1>
    <title>Syntaxe</title>
      <synopsis><command>tb0_init</command> ifn</synopsis>
      <synopsis><command>tb1_init</command> ifn</synopsis>
      <synopsis><command>tb2_init</command> ifn</synopsis>
      <synopsis><command>tb3_init</command> ifn</synopsis>
      <synopsis><command>tb4_init</command> ifn</synopsis>
      <synopsis><command>tb5_init</command> ifn</synopsis>
      <synopsis><command>tb6_init</command> ifn</synopsis>
      <synopsis><command>tb7_init</command> ifn</synopsis>
      <synopsis><command>tb8_init</command> ifn</synopsis>
      <synopsis><command>tb9_init</command> ifn</synopsis>
      <synopsis><command>tb10_init</command> ifn</synopsis>
      <synopsis><command>tb11_init</command> ifn</synopsis>
      <synopsis><command>tb12_init</command> ifn</synopsis>
      <synopsis><command>tb13_init</command> ifn</synopsis>
      <synopsis><command>tb14_init</command> ifn</synopsis>
      <synopsis><command>tb15_init</command> ifn</synopsis>

      <synopsis>iout = <command>tb0</command>(iIndex)</synopsis>
      <synopsis>kout = <command>tb0</command>(kIndex)</synopsis>
      <synopsis>iout = <command>tb1</command>(iIndex)</synopsis>
      <synopsis>kout = <command>tb1</command>(kIndex)</synopsis>
      <synopsis>iout = <command>tb2</command>(iIndex)</synopsis>
      <synopsis>kout = <command>tb2</command>(kIndex)</synopsis>
      <synopsis>iout = <command>tb3</command>(iIndex)</synopsis>
      <synopsis>kout = <command>tb3</command>(kIndex)</synopsis>
      <synopsis>iout = <command>tb4</command>(iIndex)</synopsis>
      <synopsis>kout = <command>tb4</command>(kIndex)</synopsis>
      <synopsis>iout = <command>tb5</command>(iIndex)</synopsis>
      <synopsis>kout = <command>tb5</command>(kIndex)</synopsis>
      <synopsis>iout = <command>tb6</command>(iIndex)</synopsis>
      <synopsis>kout = <command>tb6</command>(kIndex)</synopsis>
      <synopsis>iout = <command>tb7</command>(iIndex)</synopsis>
      <synopsis>kout = <command>tb7</command>(kIndex)</synopsis>
      <synopsis>iout = <command>tb8</command>(iIndex)</synopsis>
      <synopsis>kout = <command>tb8</command>(kIndex)</synopsis>
      <synopsis>iout = <command>tb9</command>(iIndex)</synopsis>
      <synopsis>kout = <command>tb9</command>(kIndex)</synopsis>
      <synopsis>iout = <command>tb10</command>(iIndex)</synopsis>
      <synopsis>kout = <command>tb10</command>(kIndex)</synopsis>
      <synopsis>iout = <command>tb11</command>(iIndex)</synopsis>
      <synopsis>kout = <command>tb11</command>(kIndex)</synopsis>
      <synopsis>iout = <command>tb12</command>(iIndex)</synopsis>
      <synopsis>kout = <command>tb12</command>(kIndex)</synopsis>
      <synopsis>iout = <command>tb13</command>(iIndex)</synopsis>
      <synopsis>kout = <command>tb13</command>(kIndex)</synopsis>
      <synopsis>iout = <command>tb14</command>(iIndex)</synopsis>
      <synopsis>kout = <command>tb14</command>(kIndex)</synopsis>
      <synopsis>iout = <command>tb15</command>(iIndex)</synopsis>
      <synopsis>kout = <command>tb15</command>(kIndex)</synopsis>
  </refsect1>

  <refsect1>
    <title>Exécution</title>
    <para>
      Il y a 16 opcodes différents dont le nom est associé à un nombre compris
      entre 0 et 15. Il faut associer une table spécifique avec chaque opcode
      (ainsi le nombre maximum de tables accessibles de manière fonctionnelle
      est 16). Avant de pouvoir accéder à une table, celle-ci doit être
      associée avec l'un des 16 opcodes au moyen d'un opcode choisi parmi
      <emphasis>tb0_init</emphasis>, ..., <emphasis>tb15_init</emphasis>. Par
      exemple,
      <programlisting>
      <emphasis role="opc">tb0_init</emphasis>  1</programlisting>
      associe la table 1 avec la fonction <emphasis>tb0( )</emphasis>, si bien
      que chaque élément de la table 1 peut être atteint (de manière
      fonctionnelle) par :
      <programlisting>
      kvar <emphasis role="op">=</emphasis> <emphasis role="opc">tb0</emphasis>(k_some_index_of_table1) <emphasis role="op">*</emphasis> k_some_other_var</programlisting>
      <programlisting>
      ivar <emphasis role="op">=</emphasis> <emphasis role="opc">tb0</emphasis>(i_some_index_of_table1) <emphasis role="op">+</emphasis> i_some_other_var</programlisting>
      etc...
    </para>
    <para>
      En utilisant ces opcodes, on peut réduire considérablement le nombre de
      lignes d'un orchestre, ce qui améliore sa lisibilité.
    </para>
  </refsect1>

  <refsect1>
    <title>Crédits</title>
    <para>Ecrit par &namegabriel;.</para>
  </refsect1>
</refentry>
