<!--translated=yes
authors=Francois Pinot
english cvs version=1.12
// translated field can be yes, no or partially
// Add your name to the existing list of authors
// Add the version number of the file you are translating from the english version number on cvs
// *** Please remember to keep this information up to date! ***
-->

<refentry id="timedseq">
<indexterm id="IndexTimedSeq"><primary>timedseq</primary></indexterm>
  <refentryinfo><title>Instrument Control:Sensing and Control</title></refentryinfo>
  <refmeta>
    <refentrytitle>timedseq</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>timedseq</refname>
    <refpurpose>
      Séquenceur à variation temporelle.
    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Description</title>
    <para>
      Un séquenceur d'évènements dans lequel le temps peut être contrôlé par un
      pointeur. Les données de la séquence sont stockées dans une table.
    </para>
  </refsect1>

  <refsect1>
    <title>Syntaxe</title>
      <synopsis>ktrig  <command>timedseq</command>  ktimpnt, ifn, kp1 [,kp2, kp3, ...,kpN]</synopsis>
  </refsect1>

  <refsect1>
    <title>Initialisation</title>
    <para>
    <emphasis>ifn</emphasis> -- numéro de la table contenant les données de la
      séquence.
    </para>
  </refsect1>
  <refsect1>
    <title>Exécution</title>
    <para>
      <emphasis>ktri</emphasis> -- signal de déclenchement en sortie.
    </para>
    <para>
      <emphasis>ktimpnt</emphasis> -- pointeur de temps dans le fichier de la
      séquence, en secondes.
    </para>
    <para>
      <emphasis>kp1,...,kpN</emphasis> -- p-champs des notes retournés en sortie.
      <emphasis>kp2</emphasis> est la date relative et <emphasis>kp3</emphasis>
      est la durée des notes en secondes.
    </para>
    <para>
      <emphasis>timedseq</emphasis> est un séquenceur qui permet de programmer
      des notes venant d'une séquence de l'utilisateur et dépendant d'une base
      de temps externe donnée par un pointeur de temps (l'argument
      <emphasis>ktimpnt</emphasis>). L'utilisateur doit remplir la table
      <emphasis>ifn</emphasis> avec une liste de notes, qui peuvent provenir
      d'un fichier texte externe lu par <emphasis>GEN23</emphasis>, ou en les
      tapant directement dans le fichier d'orchestre (ou de partition) avec
      <emphasis>GEN02</emphasis>. Le format du fichier texte contenant la séquence
      comprend simplement des lignes qui contiennent plusieurs nombres séparés
      par des espaces (comme dans une partition normale de Csound). La première
      valeur de chaque ligne doit être une valeur positive ou nulle, sauf dans
      un cas spécial qui sera expliqué ci-dessous. Cette première valeur sert
      normalement à définir le numéro d'instrument correspondant à cette note
      particulière (comme dans une partition normale). La seconde valeur de
      chaque ligne doit contenir la date de la note correspondante et la
      troisième valeur sa durée. Voici un exemple :
    </para>
<programlisting>
0 0    0.25 1  93
0 0.25 0.25 2  63
0 0.5  0.25 3  91
0 0.75 0.25 4  70
0 1    0.25 5  83
0 1.25 0.25 6  75
0 1.5  0.25 7  78
0 1.75 0.25 8  78
0 2    0.25 9  83
0 2.25 0.25 10 70
0 2.5  0.25 11 54
0 2.75 0.25 12 80
-1 3   -1   -1 -1  ;; dernière ligne de la séquence</programlisting>
    <para>
      Dans cet exemple, la première valeur de chaque ligne est toujours zéro
      (c'est une valeur sans signification, mais ce p-champ peut servir, par
      exemple, pour donner un canal MIDI ou un numéro d'instrument), sauf dans
      la dernière ligne qui commence par -1. Cette valeur (-1) est une valeur
      spéciale qui indique la fin de la séquence. Elle a elle-même une date car
      les séquences peuvent être lues en boucle. Ainsi la séquence précédente
      a une durée par défaut de 3 secondes, 3 étant la dernière date de la
      séquence.
    </para>
    <para>
      Il est important que TOUTES les lignes contiennent le même nombre de
      valeurs (dans l'exemple, toutes les lignes contiennent exactement 5 valeurs).
      Le nombre de valeurs contenues dans chaque ligne DOIT être égal au nombre
      d'arguments <emphasis>kpXX</emphasis> de sortie (noter que même si
      <emphasis>kp1</emphasis>, <emphasis>kp2</emphasis>, etc. sont placés à
      la droite de l'opcode, ce sont des arguments de sortie, pas des arguments
      d'entrée).
    </para>
    <para>
      L'argument <emphasis>ktimpnt</emphasis> fournit la temporisation réelle de
      la séquence. Actuellement, le déroulement du temps dans la séquence est
      spécifié par <emphasis>ktimpnt</emphasis> lui-même, qui représente le temps
      en secondes. <emphasis>ktimpnt</emphasis> doit toujours être positif, mais
      il ne peut pas avancer ou reculer dans le temps, être stationnaire ou
      discontinu, comme un pointeur dans un fichier séquentiel à la manière de
      <emphasis>pvoc</emphasis> ou de <emphasis>lpread</emphasis>. Lorsque
      <emphasis>ktimpnt</emphasis> atteint la date d'une note, un signal de
      déclenchement est envoyé sur l'argument de sortie <emphasis>ktrig</emphasis>,
      et les arguments <emphasis>kp1</emphasis>, <emphasis>kp2</emphasis>, ...,
      <emphasis>kpN</emphasis> sont mis à jour avec les valeurs de chaque note.
      Cette information peut ensuite être utilisée par
      <emphasis>schedkwhen</emphasis> pour activer des évènements de note.
      Noter que les données <emphasis>kp1</emphasis>, ..., <emphasis>kpn</emphasis>
      peuvent être traitées (par exemple retardées avec <emphasis>delayk</emphasis>,
      transposées, etc.) avant d'être passées à <emphasis>schedkwhen</emphasis>.
    </para>
    <para>
      <emphasis>ktimpnt</emphasis> peut être contrôlé par un signal linéaire, par
      exemple :
    </para>
<programlisting>
ktimpnt <emphasis role="opc">line</emphasis>        0, p3, 3  <emphasis role="comment">; la durée originale de la séquence était de 3 sec</emphasis>
ktrig   <emphasis role="opc">timedseq</emphasis>    ktimpnt, 1, kp1, kp2, kp3, kp4, kp5
        <emphasis role="opc">schedkwhen</emphasis>  ktrig, 105, 2, 0, kp3, kp4, kp5</programlisting>
    <para>
      Dans ce cas la séquence complète (avec sa durée originale de 3 secondes)
      sera jouée en <emphasis>p3</emphasis> secondes.
    </para>
    <para>
      On peut faire boucler une séquence en la contrôlant avec un phaseur :
<programlisting>
kphs    <emphasis role="opc">phasor</emphasis>      1<emphasis role="op">/</emphasis>3
ktimpnt <emphasis role="op">=</emphasis>           kphs <emphasis role="op">*</emphasis> 3
ktrig   <emphasis role="opc">timedseq</emphasis>    ktimpnt ,1 ,kp1, kp2, kp3, kp4, kp5
        <emphasis role="opc">schedkwhen</emphasis>  ktrig, 105, 2, 0, kp3, kp4, kp5</programlisting>
    </para>
    <para>
      Il est évident que l'on peut ne jouer qu'un fragment de la séquence, la
      lire à l'envers, et avoir un accès non-linéaire à ses données de la même
      manière que les opcodes <emphasis>pvoc</emphasis> et <emphasis>lpread</emphasis>.
    </para>
    <para>
      Avec l'opcode <emphasis>timedseq</emphasis>, on peut faire presque tout ce
      que l'on fait dans une partition normale, excepté les limitations suivantes :
      <orderedlist>
        <listitem>
          <para>On ne peut pas avoir deux notes commençant exactement à la même
          date ; actuellement deux notes doivent être séparées d'au moins un
          k-cycle (sinon le mécanisme de <emphasis>schedkwhen</emphasis> en escamote
          une des deux).</para>
        </listitem>
        <listitem>
          <para>Toutes les notes de la séquence doivent avoir le même nombre de
          p-champs (même si elles activent différents instruments).</para>
        </listitem>
      </orderedlist>
      On peut remédier à ces limitations en complétant avec des valeurs sans
      signification les notes des instruments qui ont moins de p-champs que les
      autres.
    </para>
  </refsect1>

   <refsect1>
    <title>Exemples</title>
    <para>
      Voici un exemple complet de l'opcode timedseq. Il utilise le fichier
      <ulink url="examples/timedseq.csd"><citetitle>timedseq.csd</citetitle></ulink>.
      <example>
        <title>Exemple de l'opcode timedseq.</title>
        <para>Voir les sections <link linkend="UsingRealTime"><citetitle>Audio en Temps Réel</citetitle></link>
        et <link linkend="CommandFlags"><citetitle>Options de la Ligne de Commande</citetitle></link> pour plus
        d'information sur l'utilisation des options de la ligne de commande.</para>
          <xi:include href="examples-xml/timedseq.csd.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
      </example>
    </para>
  </refsect1>

  <refsect1>
    <title>Voir aussi</title>
    <para>
      <link linkend="GEN02"><citetitle>GEN02</citetitle></link>,
      <link linkend="GEN23"><citetitle>GEN23</citetitle></link>,
      <link linkend="seqtime"><citetitle>seqtime</citetitle></link>,
      <link linkend="seqtime"><citetitle>seqtime2</citetitle></link>,
      <link linkend="trigseq"><citetitle>trigseq</citetitle></link>
    </para>
  </refsect1>

  <refsect1>
    <title>Crédits</title>
    <para>
      Auteur : &namegabriel;
    </para>
  </refsect1>
</refentry>
