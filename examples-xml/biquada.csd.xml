<refsect1>
<programlisting>
<emphasis role="csdtag">&lt;CsoundSynthesizer&gt;</emphasis>
<emphasis role="csdtag">&lt;CsOptions&gt;</emphasis>
<emphasis role="comment">; Select audio/midi flags here according to platform</emphasis>
<emphasis role="comment">; Audio out   Audio in    No messages</emphasis>
-odac           -iadc     -d     <emphasis role="comment">;;;RT audio I/O</emphasis>
<emphasis role="comment">; For Non-realtime ouput leave only the line below:</emphasis>
<emphasis role="comment">; -o biquad.wav -W ;;; for file output any platform</emphasis>
<emphasis role="csdtag">&lt;/CsOptions&gt;</emphasis>
<emphasis role="csdtag">&lt;CsInstruments&gt;</emphasis>

<emphasis role="comment">; Initialize the global variables.</emphasis>
<emphasis role="ohdr">sr</emphasis> <emphasis role="op">=</emphasis> 44100
<emphasis role="ohdr">kr</emphasis> <emphasis role="op">=</emphasis> 4410
<emphasis role="ohdr">ksmps</emphasis> <emphasis role="op">=</emphasis> 10
<emphasis role="ohdr">nchnls</emphasis> <emphasis role="op">=</emphasis> 2

<emphasis role="comment">; Instrument #1.</emphasis>
<emphasis role="oblock">instr</emphasis> 1
  <emphasis role="comment">; Get the values from the score.</emphasis>
  idur <emphasis role="op">=</emphasis> p3
  iamp <emphasis role="op">=</emphasis> p4
  icps <emphasis role="op">=</emphasis> <emphasis role="opc">cpspch</emphasis>(p5)
  afco   <emphasis role="opc">expon</emphasis>  100, p3, 2000
  arez   <emphasis role="opc">line</emphasis>  0.8, p3, 0.99

  <emphasis role="comment">; Calculate the biquadratic filter's coefficients </emphasis>
  afcon <emphasis role="op">=</emphasis> 2<emphasis role="op">*</emphasis>3.14159265<emphasis role="op">*</emphasis>afco<emphasis role="op">/</emphasis><emphasis role="ohdr">sr</emphasis>
  aalpha <emphasis role="op">=</emphasis> 1<emphasis role="op">-</emphasis>2<emphasis role="op">*</emphasis>arez<emphasis role="op">*</emphasis><emphasis role="opc">cos</emphasis>(afcon)<emphasis role="op">*</emphasis><emphasis role="opc">cos</emphasis>(afcon)<emphasis role="op">+</emphasis>arez<emphasis role="op">*</emphasis>arez<emphasis role="op">*</emphasis><emphasis role="opc">cos</emphasis>(2<emphasis role="op">*</emphasis>afcon)
  abeta <emphasis role="op">=</emphasis> arez<emphasis role="op">*</emphasis>arez<emphasis role="op">*</emphasis><emphasis role="opc">sin</emphasis>(2<emphasis role="op">*</emphasis>afcon)<emphasis role="op">-</emphasis>2<emphasis role="op">*</emphasis>arez<emphasis role="op">*</emphasis><emphasis role="opc">cos</emphasis>(afcon)<emphasis role="op">*</emphasis><emphasis role="opc">sin</emphasis>(afcon)
  agama <emphasis role="op">=</emphasis> 1<emphasis role="op">+</emphasis><emphasis role="opc">cos</emphasis>(afcon)
  am1 <emphasis role="op">=</emphasis> aalpha<emphasis role="op">*</emphasis>agama<emphasis role="op">+</emphasis>abeta<emphasis role="op">*</emphasis><emphasis role="opc">sin</emphasis>(afcon)
  am2 <emphasis role="op">=</emphasis> aalpha<emphasis role="op">*</emphasis>agama<emphasis role="op">-</emphasis>abeta<emphasis role="op">*</emphasis><emphasis role="opc">sin</emphasis>(afcon)
  aden <emphasis role="op">=</emphasis> <emphasis role="opc">sqrt</emphasis>(am1<emphasis role="op">*</emphasis>am1<emphasis role="op">+</emphasis>am2<emphasis role="op">*</emphasis>am2)
  ab0 <emphasis role="op">=</emphasis> 1.5<emphasis role="op">*</emphasis>(aalpha<emphasis role="op">*</emphasis>aalpha<emphasis role="op">+</emphasis>abeta<emphasis role="op">*</emphasis>abeta)<emphasis role="op">/</emphasis>aden
  ab1 <emphasis role="op">=</emphasis> ab0
  ab2 <emphasis role="op">=</emphasis> 0
  aa0 <emphasis role="op">=</emphasis> 1
  aa1 <emphasis role="op">=</emphasis> <emphasis role="op">-</emphasis>2<emphasis role="op">*</emphasis>arez<emphasis role="op">*</emphasis><emphasis role="opc">cos</emphasis>(afcon)
  aa2 <emphasis role="op">=</emphasis> arez<emphasis role="op">*</emphasis>arez
  
  <emphasis role="comment">; Generate an input signal.</emphasis>
  axn <emphasis role="opc">vco</emphasis> 1, icps, 1

  <emphasis role="comment">; Filter the input signal.</emphasis>
  ayn <emphasis role="opc">biquada</emphasis> axn, ab0, ab1, ab2, aa0, aa1, aa2
  <emphasis role="opc">outs</emphasis> ayn<emphasis role="op">*</emphasis>iamp<emphasis role="op">/</emphasis>2, ayn<emphasis role="op">*</emphasis>iamp<emphasis role="op">/</emphasis>2
<emphasis role="oblock">endin</emphasis>


<emphasis role="csdtag">&lt;/CsInstruments&gt;</emphasis>
<emphasis role="csdtag">&lt;CsScore&gt;</emphasis>

<emphasis role="comment">; Table #1, a sine wave.</emphasis>
<emphasis role="stamnt">f</emphasis> 1 0 16384 10 1

<emphasis role="comment">;    Sta  Dur  Amp    Pitch</emphasis>
<emphasis role="stamnt">i</emphasis> 1  0.0  5.0  20000  6.00 
<emphasis role="stamnt">e</emphasis>


<emphasis role="csdtag">&lt;/CsScore&gt;</emphasis>
<emphasis role="csdtag">&lt;/CsoundSynthesizer&gt;</emphasis>
</programlisting>
</refsect1>
