<refsect1>
<programlisting>
<emphasis role="csdtag">&lt;CsoundSynthesizer&gt;</emphasis>
<emphasis role="csdtag">&lt;CsOptions&gt;</emphasis>

<emphasis role="csdtag">&lt;/CsOptions&gt;</emphasis>
<emphasis role="csdtag">&lt;CsInstruments&gt;</emphasis>
<emphasis role="ohdr">ksmps</emphasis> <emphasis role="op">=</emphasis> 64

ifn1 <emphasis role="ohdr">ftgen</emphasis> 1, 0, 512, 7, 0, 512, 0
ifn2 <emphasis role="ohdr">ftgen</emphasis> 2, 0, 512, 7, 0, 512, 0

<emphasis role="oblock">opcode</emphasis> PVA,k[]k[]k,aii
 asig,isize,ihop <emphasis role="opc">xin</emphasis>
 iolaps <emphasis role="opc">init</emphasis> isize<emphasis role="op">/</emphasis>ihop
 kcnt <emphasis role="opc">init</emphasis> 0
 krow <emphasis role="opc">init</emphasis> 1
 kIn[] <emphasis role="opc">init</emphasis> isize
 kOlph[] <emphasis role="opc">init</emphasis> isize<emphasis role="op">/</emphasis>2 <emphasis role="op">+</emphasis> 1
 ifac <emphasis role="op">=</emphasis> (<emphasis role="ohdr">sr</emphasis><emphasis role="op">/</emphasis>(ihop<emphasis role="op">*</emphasis>2<emphasis role="op">*</emphasis>$M_PI))<emphasis role="comment">;</emphasis>
 iscal <emphasis role="op">=</emphasis> (2<emphasis role="op">*</emphasis>$M_PI<emphasis role="op">*</emphasis>ihop<emphasis role="op">/</emphasis>isize)<emphasis role="comment">;</emphasis>
 kfl <emphasis role="op">=</emphasis> 0
 kIn <emphasis role="opc">shiftin</emphasis> asig
 <emphasis role="octrl">if</emphasis> kcnt <emphasis role="op">==</emphasis> ihop then
   kWin[] <emphasis role="opc">window</emphasis> kIn,krow<emphasis role="op">*</emphasis>ihop
   kSpec[] <emphasis role="opc">rfft</emphasis> kWin
   kMags[] <emphasis role="opc">mags</emphasis> kSpec
   kPha[] <emphasis role="opc">phs</emphasis> kSpec
   kDelta[] <emphasis role="op">=</emphasis> kPha <emphasis role="op">-</emphasis> kOlph
   kOlph <emphasis role="op">=</emphasis> kPha
   kk <emphasis role="op">=</emphasis> 0
   kDelta <emphasis role="opc">unwrap</emphasis> kDelta
   while kk <emphasis role="op">&lt;</emphasis> isize<emphasis role="op">/</emphasis>2 do
    kPha[kk] <emphasis role="op">=</emphasis> (kDelta[kk] <emphasis role="op">+</emphasis> kk<emphasis role="op">*</emphasis>iscal)<emphasis role="op">*</emphasis>ifac
    kk <emphasis role="op">+</emphasis><emphasis role="op">=</emphasis> 1
   od   
   krow <emphasis role="op">=</emphasis> (krow<emphasis role="op">+</emphasis>1)<emphasis role="op">%</emphasis>iolaps
   kcnt <emphasis role="op">=</emphasis> 0
   kfl <emphasis role="op">=</emphasis> 1
 <emphasis role="octrl">endif</emphasis>
 <emphasis role="opc">xout</emphasis> kMags,kPha,kfl
 kcnt <emphasis role="op">+</emphasis><emphasis role="op">=</emphasis> <emphasis role="ohdr">ksmps</emphasis>
<emphasis role="oblock">endop</emphasis>

<emphasis role="oblock">opcode</emphasis> PVS,a,k[]k[]kii
 kMags[],kFr[],kfl,isize,ihop <emphasis role="opc">xin</emphasis>
 iolaps <emphasis role="opc">init</emphasis> isize<emphasis role="op">/</emphasis>ihop
 ifac <emphasis role="op">=</emphasis> ihop<emphasis role="op">*</emphasis>2<emphasis role="op">*</emphasis>$M_PI<emphasis role="op">/</emphasis><emphasis role="ohdr">sr</emphasis><emphasis role="comment">;</emphasis>
 iscal <emphasis role="op">=</emphasis> <emphasis role="ohdr">sr</emphasis><emphasis role="op">/</emphasis>isize
 krow <emphasis role="opc">init</emphasis> 0
 kOla[] <emphasis role="opc">init</emphasis> isize
 kOut[][] <emphasis role="opc">init</emphasis> iolaps,isize
 kPhs[] <emphasis role="opc">init</emphasis> isize<emphasis role="op">/</emphasis>2<emphasis role="op">+</emphasis>1
 <emphasis role="octrl">if</emphasis> kfl <emphasis role="op">==</emphasis> 1 then
  kk <emphasis role="op">=</emphasis> 0
  while kk <emphasis role="op">&lt;</emphasis> isize<emphasis role="op">/</emphasis>2 do
    kFr[kk] <emphasis role="op">=</emphasis> (kFr[kk] <emphasis role="op">-</emphasis> kk<emphasis role="op">*</emphasis>iscal)<emphasis role="op">*</emphasis>ifac
    kk <emphasis role="op">+</emphasis><emphasis role="op">=</emphasis> 1
  od
  kPhs <emphasis role="op">=</emphasis> kFr <emphasis role="op">+</emphasis> kPhs
  kSpec[] <emphasis role="opc">pol2rect</emphasis> kMags,kPhs
  kRow[] <emphasis role="opc">rifft</emphasis> kSpec
  kWin[] <emphasis role="opc">window</emphasis> kRow, krow<emphasis role="op">*</emphasis>ihop
  kOut <emphasis role="opc">setrow</emphasis> kWin, krow
  kOla <emphasis role="op">=</emphasis> 0
  kk <emphasis role="op">=</emphasis> 0
  until kk <emphasis role="op">==</emphasis> iolaps do
   kRow <emphasis role="opc">getrow</emphasis> kOut, kk
   kOla <emphasis role="op">=</emphasis> kOla <emphasis role="op">+</emphasis> kRow
   kk <emphasis role="op">+</emphasis><emphasis role="op">=</emphasis> 1
  od
  krow <emphasis role="op">=</emphasis> (krow<emphasis role="op">+</emphasis>1)<emphasis role="op">%</emphasis>iolaps
 <emphasis role="octrl">endif</emphasis>
 <emphasis role="opc">xout</emphasis> <emphasis role="opc">shiftout</emphasis>(kOla)<emphasis role="op">/</emphasis>iolaps
<emphasis role="oblock">endop</emphasis>
 
<emphasis role="oblock">instr</emphasis> 1
isi <emphasis role="op">=</emphasis> 1024
ihop <emphasis role="op">=</emphasis> 128

a1 <emphasis role="opc">diskin2</emphasis> "fox.wav",1,0,1 <emphasis role="comment">; audio input</emphasis>
kMags[],kPhs[],kflg PVA a1,isi,ihop
a2 PVS kMags,kPhs,kflg,isi,ihop
   <emphasis role="opc">out</emphasis> a2

<emphasis role="oblock">endin</emphasis> 
 

<emphasis role="csdtag">&lt;/CsInstruments&gt;</emphasis>
<emphasis role="csdtag">&lt;CsScore&gt;</emphasis>
<emphasis role="stamnt">i</emphasis>1 0 10
<emphasis role="csdtag">&lt;/CsScore&gt;</emphasis>
<emphasis role="csdtag">&lt;/CsoundSynthesizer&gt;</emphasis>
</programlisting>
</refsect1>
